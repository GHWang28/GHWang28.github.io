{"version":3,"file":"static/js/544.dfa6a730.chunk.js","mappings":"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","sources":["components/ChipContainer/index.tsx","components/CardProject/ImageSlideShow.tsx","components/CardProject/VideoShow.tsx","components/CardProject/WavyBackdrop.tsx","components/CardProject/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, Typography } from '@mui/material';\r\n\r\ntype ComponentProps = {\r\n  children: React.ReactNode[],\r\n}\r\n\r\n/**\r\n * A div that contains Material UI chips\r\n */\r\nconst ChipContainer = ({ children }: ComponentProps) => {\r\n  const chipContainerStyle = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'left',\r\n    alignItems: 'center',\r\n    minHeight: '32px',\r\n    overflowY: 'hidden',\r\n    m: '5px 0px',\r\n    rowGap: '8px',\r\n  }\r\n\r\n  return (\r\n    <Box sx={chipContainerStyle}>\r\n      {(children.length === 0) ? (\r\n        <Typography fontSize={18} sx={{ width: '100%', opacity: '0.7' }} align='center'>\r\n          {'Empty'}\r\n        </Typography>\r\n      ) : ( children )}\r\n    </Box>\r\n  )\r\n}\r\n\r\n\r\nexport default ChipContainer;\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Box } from '@mui/material';\r\n\r\ntype ComponentProps = {\r\n  imgs: string[]\r\n}\r\n\r\nconst ImageSlideShow = ({ imgs }: ComponentProps) => {\r\n  const [imageIndex, setImageIndex] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    if (imgs.length <= 1) return;\r\n\r\n    const timeout = setTimeout(() => {\r\n      setImageIndex((imageIndex + 1) % imgs.length)\r\n    }, 8000);\r\n\r\n    return () => { clearTimeout(timeout) }\r\n  }, [imageIndex, imgs.length]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {imgs.map((src, index) => (\r\n        <Box\r\n          component='img'\r\n          key={`card-bg-${index}`}\r\n          alt={`image-background-${index}`}\r\n          title={`Background Image #${index}`}\r\n          src={src}\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '0px',\r\n            right: '0px',\r\n            width: '100%',\r\n            height: '100%',\r\n            opacity: (imageIndex === index) ? '1.0' : '0.0',\r\n            transition: 'opacity 0.5s ease-in-out',\r\n            objectFit: 'cover',\r\n            zIndex: -2,\r\n          }}\r\n        />\r\n      ))}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ImageSlideShow;\r\n","import React from 'react';\r\nimport { Box } from '@mui/material';\r\n\r\ntype ComponentProps = {\r\n  src: string\r\n}\r\n\r\nconst VideoShow = ({ src }: ComponentProps) => {\r\n  return (\r\n    <Box\r\n      component='video'\r\n      muted\r\n      loop\r\n      autoPlay\r\n      sx={{\r\n        position: 'absolute',\r\n        top: '0px',\r\n        right: '0px',\r\n        width: '100%',\r\n        height: '100%',\r\n        transition: 'opacity 0.5s ease-in-out',\r\n        objectFit: 'cover',\r\n        zIndex: -2,\r\n      }}\r\n    >\r\n      <source src={src} type='video/mp4'/>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default VideoShow;\r\n","import React from 'react';\r\nimport { Box, keyframes } from '@mui/material';\r\n\r\ntype ComponentProps = {\r\n  bgColor: string,\r\n  speed: number,\r\n  yPos: string,\r\n  direction: 'up' | 'down',\r\n  inView: boolean\r\n}\r\n\r\nconst WavyBackdrop = ({ bgColor, speed, yPos, direction, inView }: ComponentProps) => {\r\n  const wavyUpAnimation = keyframes`\r\n    0% {\r\n      translate: 0px 0px\r\n    }\r\n    100% {\r\n      translate: 0px ${(direction === 'up') ? '-' : ''}240px\r\n    }\r\n  `\r\n  const wavySideAnimation = keyframes`\r\n    0% {\r\n      transform: translateX(15px)\r\n    }\r\n    50% {\r\n      transform: translateX(-15px)\r\n    }\r\n    100% {\r\n      transform: translateX(15px)\r\n    }\r\n  `\r\n  const waveMask = `\r\n    radial-gradient(98.41px at calc(100% - 138.00px) 50%,#000 99%,#0000 101%) 0 calc(50% - 120px)/100% 240px,\r\n    radial-gradient(98.41px at calc(100% + 78.00px) 50%,#0000 99%,#000 101%) calc(100% - 60px) 50%/100% 240px repeat-y\r\n  `\r\n  return (\r\n    /* Wave contained in another div to separate inView animation and the wavy animation */\r\n    <Box\r\n      sx={{\r\n        width: '200%',\r\n        height: 'calc(100% + 240px)',\r\n        position: 'absolute',\r\n        top: (direction === 'up') ? '0px' : '-240px',\r\n        left: yPos,\r\n        translate: (inView) ? '-50%' : '15%',\r\n        transition: 'translate 2.0s ease-out',\r\n        userSelect: 'none',\r\n        zIndex: -1\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          width: '100%',\r\n          height: '100%',\r\n          animation: `${wavyUpAnimation} ${speed}s linear infinite, ${wavySideAnimation} ${speed / 2}s ease-in-out -${(direction === 'up') ? speed / 8 : 0}s infinite`,\r\n          backgroundImage: `linear-gradient(90deg, ${bgColor} 65%, rgba(255,255,255,0) 150%)`,\r\n          mask: waveMask,\r\n          WebkitMask: waveMask\r\n        }}\r\n      />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default WavyBackdrop;\r\n","import React from 'react';\r\nimport { Box, Button, Chip, Typography, useMediaQuery, useTheme } from '@mui/material';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport ChipContainer from '../ChipContainer';\r\nimport BootstrapTooltip from '../BootstrapTooltip';\r\nimport ImageSlideShow from './ImageSlideShow';\r\nimport VideoShow from './VideoShow';\r\nimport TagIcon from '../../icons/TagIcon';\r\nimport WavyBackdrop from './WavyBackdrop';\r\nimport TypographyBorder from '../TypographyBorder';\r\nimport { ProjectData } from '../../types';\r\n\r\ntype ComponentProps = {\r\n  data: ProjectData,\r\n  index?: number\r\n}\r\n\r\nconst CardProject = ({ data, index = 0 }: ComponentProps) => {\r\n  const [ref, inView] = useInView({\r\n    rootMargin: '9999999px 0px 0px 0px'\r\n  });\r\n  const theme = useTheme();\r\n  const smallMq = useMediaQuery(theme.breakpoints.up('sm'));\r\n  const lightMode = theme.palette.mode === 'light';\r\n\r\n  const {\r\n    title,\r\n    date,\r\n    type,\r\n    body,\r\n    imgs,\r\n    buttons\r\n  } = data;\r\n\r\n  return (\r\n    <Box\r\n      ref={ref}\r\n      className='border-gradient'\r\n      p={2}\r\n      sx={{\r\n        position: 'relative',\r\n        opacity: (inView) ? '1' : '0',\r\n        translate: (inView) ? '0px' : ((index % 2) ? '100px' : '-100px'),\r\n        transition: 'scale 0.5s ease-in-out, box-shadow 0.5s ease-in-out, translate 0.5s ease-in-out, opacity 0.5s ease-in-out',\r\n        borderRadius: '15px',\r\n        overflow: 'hidden',\r\n        mx: { lg: 0, md: 5, xs: 0 },\r\n        mb: { md: 5, xs: 2 },\r\n        bgcolor: 'bgColor.main',\r\n        scale: '0.975',\r\n        boxShadow: '0 4px 8px 0 rgba(255,255,255,0.2)',\r\n        '&:hover': {\r\n          boxShadow: '0 4px 16px 0 rgba(255,255,255,0.2)',\r\n          scale: '1'\r\n        }\r\n      }}\r\n    >\r\n      <Box sx={{ width: { sm: '60%', xs: '100%' }}}>\r\n        <BootstrapTooltip title='Title' placement={(smallMq) ? 'left' : 'top-start'}>\r\n          <TypographyBorder variant='h4'>\r\n            {title}\r\n          </TypographyBorder>\r\n        </BootstrapTooltip>\r\n        {(type) && (\r\n          <BootstrapTooltip title='Tags' placement={(smallMq) ? 'left' : 'top-start'}>\r\n            <div>\r\n              <ChipContainer>\r\n                {type.sort().map((label, index) => (\r\n                  <Chip\r\n                    icon={<TagIcon label={label} sx={{ ml: 0.6 }}/>}\r\n                    variant='outlined'\r\n                    sx={{\r\n                      mr: (index === type.length - 1) ? 0 : 1,\r\n                      borderColor: 'borderColor.main',\r\n                      bgcolor: 'bgColor.main'\r\n                    }}\r\n                    key={`label-${index}`}\r\n                    label={label}\r\n                  />\r\n                ))}\r\n              </ChipContainer>\r\n            </div>\r\n          </BootstrapTooltip>\r\n        )}\r\n        {(date) && (\r\n          <BootstrapTooltip title='Date Finished' placement={(smallMq) ? 'left' : 'top-start'}>\r\n            <Chip label={date} variant='outlined' />\r\n          </BootstrapTooltip>\r\n        )}\r\n        <Box component='hr' />\r\n        {(body) && (\r\n          <Box\r\n            component='ul'\r\n            sx={{\r\n              py: 3,\r\n              border: `1px solid ${theme.palette.borderColor.main}`,\r\n              borderRadius: '15px',\r\n              bgcolor: 'bgColor.main'\r\n            }}\r\n          >\r\n            {body.map((dotpoint, index) => (\r\n              <Box key={`dotpoint-${index}`} component='li' sx={{ color: theme.palette.mode === 'light' ? 'black' : 'whitesmoke' }}>\r\n                <Typography pr={1}>\r\n                  {dotpoint}\r\n                </Typography>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        )}\r\n      </Box>\r\n      {buttons && buttons.map((button, buttonIndex) => (\r\n        <BootstrapTooltip key={`c${index}-b${buttonIndex}]`} placement='left' enterDelay={300} title={button?.disabled || button.text}>\r\n          <Box\r\n            component='span'\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: { xs: 'center', sm: 'left' }\r\n            }}\r\n          >\r\n            <Button\r\n              startIcon={button.icon}\r\n              variant='contained'\r\n              onClick={button?.onClick}\r\n              sx={{ m: 0.5, border: `1px solid ${theme.palette.borderColor.main}`, width: { sm: 'fit-content', xs: '75%' }, minWidth: '180px' }}\r\n              disabled={button?.disabled != null}\r\n            >\r\n              {button.text}\r\n            </Button>\r\n          </Box>\r\n        </BootstrapTooltip>\r\n      ))}\r\n      {/* Wavy Backdrop displayed behind text */}\r\n      <WavyBackdrop\r\n        bgColor={(lightMode) ? 'white' : theme.palette.gray.main}\r\n        speed={7}\r\n        yPos='-37.5%'\r\n        direction={(index % 2) ? 'up' : 'down'}\r\n        inView={inView}\r\n      />\r\n      <WavyBackdrop\r\n        bgColor={(lightMode) ? 'gray' : 'rgba(20,20,20,0.6)'}\r\n        speed={7}\r\n        yPos='-67%'\r\n        direction={!(index % 2) ? 'up' : 'down'}\r\n        inView={inView}\r\n      />\r\n      {/* Background to show image slideshow or video */}\r\n      {imgs[0].endsWith('.webm') || (imgs[0].endsWith('.mp4')) ? <VideoShow src={imgs[0]} /> : <ImageSlideShow imgs={imgs} />}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default CardProject;\r\n"],"names":["children","Box","sx","display","flexWrap","justifyContent","alignItems","minHeight","overflowY","m","rowGap","length","Typography","fontSize","width","opacity","align","imgs","useState","imageIndex","setImageIndex","useEffect","timeout","setTimeout","clearTimeout","Fragment","map","src","index","component","alt","title","position","top","right","height","transition","objectFit","zIndex","muted","loop","autoPlay","type","bgColor","speed","yPos","direction","inView","wavyUpAnimation","keyframes","wavySideAnimation","waveMask","left","translate","userSelect","animation","backgroundImage","mask","WebkitMask","data","useInView","rootMargin","ref","theme","useTheme","smallMq","useMediaQuery","breakpoints","up","lightMode","palette","mode","date","body","buttons","className","p","borderRadius","overflow","mx","lg","md","xs","mb","bgcolor","scale","boxShadow","sm","BootstrapTooltip","placement","TypographyBorder","variant","sort","label","Chip","icon","TagIcon","ml","mr","borderColor","py","border","main","dotpoint","color","pr","button","buttonIndex","enterDelay","disabled","text","Button","startIcon","onClick","minWidth","gray","endsWith"],"sourceRoot":""}