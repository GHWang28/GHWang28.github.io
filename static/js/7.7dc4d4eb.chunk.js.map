{"version":3,"file":"static/js/7.7dc4d4eb.chunk.js","mappings":"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","sources":["components/BoxInfo/index.tsx","components/VideoPlayer/index.tsx","components/ImageGallery/index.tsx","pages/PageProjects/UniversityProjs/ProjectMinecraftScreensaver.tsx","../node_modules/@mui/icons-material/ArrowLeft.js","../node_modules/@mui/icons-material/ArrowRight.js"],"sourcesContent":["import React, { Fragment } from 'react';\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { animated, useSpring } from 'react-spring';\r\n\r\ntype ComponentProps = {\r\n  children?: React.ReactNode,\r\n  title?: string,\r\n  footer?: React.ReactNode,\r\n  plagiarism?: boolean\r\n}\r\n\r\nconst BoxInfo = ({ children, title, footer, plagiarism = false }: ComponentProps) => {\r\n  const AnimatedBox = animated(Box);\r\n  return (\r\n    <AnimatedBox\r\n      style={useSpring({\r\n        from: { opacity: 0, scale: 0.8 },\r\n        to: { opacity: 1, scale: 1.0 },\r\n      })}\r\n      p={3}\r\n      my={3}\r\n      mx={{ md: 10, xs: 0 }}\r\n      sx={{\r\n        borderRadius: '15px',\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid',\r\n        borderColor: 'contrastColor.main',\r\n        bgcolor: 'bgColor.darker',\r\n      }}\r\n    >\r\n      {(title) && (\r\n        <Typography pb={2} fontWeight='bold' sx={{ opacity: '0.5' }}>\r\n          {title}\r\n        </Typography>\r\n      )}\r\n      <Typography fontWeight='bold' fontSize={19}>\r\n        {children}\r\n        {(plagiarism) && (\r\n          <Fragment>\r\n            {'As per '}\r\n            <Box component='span' sx={{ color: 'yellow.main' }}>{'University'}</Box>\r\n            {' policies, the source code for this project '}\r\n            <Box component='span' sx={{ color: 'rgb(255,0,0)' }}>{'can not'}</Box>\r\n            {' be '}\r\n            <em>{'publicly'}</em>\r\n            {' shared.'}\r\n          </Fragment>\r\n        )}\r\n      </Typography>\r\n      {(footer) && (\r\n        <Box mt={4} sx={{ display: 'flex', justifyContent: 'center' }}>\r\n          {footer}\r\n        </Box>\r\n      )}\r\n    </AnimatedBox>\r\n  )\r\n}\r\n\r\nexport default BoxInfo;\r\n","import React, { useState } from 'react';\r\nimport { getYouTubeThumbnailImg, convertToEmbedYoutubeVid } from '../../helpers';\r\nimport { Box } from '@mui/material';\r\n\r\ntype ComponentProps = {\r\n  width?: string,\r\n  height?: string,\r\n  url: string\r\n}\r\n\r\n/**\r\n * A video player that is customised to be different\r\n * to YouTube's default player.\r\n * Features a custom play button/initial state\r\n */\r\nfunction VideoPlayer ({ width, height, url }: ComponentProps) {\r\n  // Hooks\r\n  const [hoverButtonState, setHoverButtonState] = useState(false);\r\n  const [showVidState, setShowVidState] = useState(false);\r\n\r\n  if (showVidState) {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          width,\r\n          height\r\n        }}\r\n      >\r\n        <iframe\r\n          width={width}\r\n          height={height}\r\n          src={convertToEmbedYoutubeVid(url) + '?start=1&autoplay=1&enablejsapi=1'}\r\n          title=\"YouTube video player\"\r\n          frameBorder=\"0\"\r\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n          allowFullScreen\r\n        />\r\n      </Box>\r\n    )\r\n  }\r\n\r\n  const thumbnailImg = getYouTubeThumbnailImg(url);\r\n  const centerSX = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '100%',\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: 'relative',\r\n        width,\r\n        height\r\n      }}\r\n    >\r\n      <Box\r\n        component='img'\r\n        role='button'\r\n        title='Play Video'\r\n        alt='Play Button'\r\n        onMouseEnter={() => { setHoverButtonState(true) }}\r\n        onMouseLeave={() => { setHoverButtonState(false) }}\r\n        onClick={(event: React.MouseEvent<HTMLDivElement>) => {\r\n          event.stopPropagation();\r\n          setShowVidState(true);\r\n          setHoverButtonState(false);\r\n        }}\r\n        src={'/images/youtube.svg'}\r\n        sx={{\r\n          ...centerSX,\r\n          cursor: 'pointer',\r\n          opacity: (hoverButtonState) ? '100%' : '80%',\r\n          width: '25%',\r\n          WebkitTapHighlightColor: 'transparent',\r\n          zIndex: 2\r\n        }}\r\n      />\r\n      <Box\r\n        component='img'\r\n        alt='Video Thumbnail'\r\n        src={thumbnailImg}\r\n        sx={{\r\n          ...centerSX,\r\n          transition: 'filter 0.25s ease-in-out',\r\n          filter: (hoverButtonState) ? 'blur(5px)' : ''\r\n        }}\r\n      />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default VideoPlayer;\r\n","import React, { useState } from 'react';\r\nimport { Box, Button, Grid, useMediaQuery, Theme, useTheme } from '@mui/material';\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport ArrowLeftIcon from '@mui/icons-material/ArrowLeft';\r\nimport { getYouTubeThumbnailImg, isYouTubeURL, mod } from '../../helpers';\r\nimport VideoPlayer from '../VideoPlayer';\r\nimport { animated, useSpring, useTransition } from 'react-spring';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useSwipeable } from 'react-swipeable';\r\nimport ImageZoomable from '../ImageZoomable';\r\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\r\nimport ImageLoader from '../ImageLoader';\r\n\r\ntype ComponentProps = {\r\n  imgArray: string[]\r\n}\r\n\r\n/**\r\n * A gallery/carousel that is responsive and can be navigated with\r\n * the image strip at the bottom or via the side arrows.\r\n * Not providing a mainImgSrc will display a default image.\r\n */\r\nconst ImageGallery = ({ imgArray = [] }: ComponentProps) => {\r\n  const lightMode = useTheme().palette.mode === 'light';\r\n  const largeMq = useMediaQuery((theme: Theme) => theme.breakpoints.up('lg'));\r\n  const mediumMq = useMediaQuery((theme: Theme) => theme.breakpoints.up('md'));\r\n  const [imgIndex, setImgIndex] = useState(0);\r\n  const [prevImgIndex, setPrevImgIndex] = useState(0);\r\n\r\n  // Handles swiping for mobile\r\n  const swipeHandler = useSwipeable({\r\n    delta: 50,\r\n    onSwipedLeft: ({ event }) => {\r\n      event.stopPropagation();\r\n      cycleImg(imgIndex + 1);\r\n    },\r\n    onSwipedRight: ({ event }) => {\r\n      event.stopPropagation();\r\n      cycleImg(imgIndex - 1);\r\n    }\r\n  });\r\n  const preventSwipeHandler = useSwipeable({\r\n    onSwiped: ({ event }) => {\r\n      event.stopPropagation();\r\n    }\r\n  })\r\n\r\n  // Spring Animation\r\n  const animationProps = useSpring({\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n  });\r\n  const transitions = useTransition(imgIndex, {\r\n    from: { x: (prevImgIndex > imgIndex) ? '-50%' : '50%', opacity: 0 },\r\n    enter: { x : '0%', opacity: 1 },\r\n    leave: { x: (prevImgIndex <= imgIndex) ? '-25%' : '25%', opacity: 0  },\r\n  });\r\n  const AnimatedBox = animated(Box);\r\n\r\n  /**\r\n   * Cycles to the next image. If it is out of bounds, it will wrap around\r\n   */\r\n  const cycleImg = (newIndex: number) => {\r\n    switchImg(mod(newIndex, imgArray.length));\r\n  }\r\n  const cycleLeft = () => {\r\n    cycleImg(imgIndex - 1);\r\n  }\r\n  const cycleRight = () => {\r\n    cycleImg(imgIndex + 1);\r\n  }\r\n  const switchImg = (img: number) => {\r\n    setPrevImgIndex(imgIndex);\r\n    setImgIndex(img);\r\n  }\r\n\r\n  const galleryHeight = () => {\r\n    if (largeMq) return '500px';\r\n    if (mediumMq) return '400px';\r\n    return '200px';\r\n  }\r\n\r\n  const gallerySX = {\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    bgcolor: 'black.translucent'\r\n  }\r\n\r\n  const arrowSx = {\r\n    bgcolor: (mediumMq) ? 'rgba(0,0,0,0.2)' : 'rgba(0,0,0,0.5)'\r\n  }\r\n\r\n  return (\r\n    <AnimatedBox\r\n      style={animationProps}\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid',\r\n        borderColor: 'contrastColor.main',\r\n        borderRadius: '8px',\r\n        overflow: 'hidden',\r\n        mx: (mediumMq) ? 10 : 0\r\n      }}\r\n    >\r\n      <Grid {...swipeHandler} container sx={{ height: galleryHeight(), overflow: 'hidden' }}>\r\n        {/* < */}\r\n        <Grid\r\n          item\r\n          xs={1}\r\n          sm={1}\r\n          sx={{ ...gallerySX, ...arrowSx }}\r\n          zIndex={5}\r\n        >\r\n          <SideArrow title='Previous Image' onClick={cycleLeft}>\r\n            <ArrowLeftIcon sx={{ scale: '3' }}/>\r\n          </SideArrow>\r\n        </Grid>\r\n        {/* Image viewer */}\r\n        <Grid item xs={10} sm={10} sx={{...gallerySX, position: 'relative'}}>\r\n          {transitions((style, imgIndex) => (\r\n            <AnimatedBox style={style} sx={{ position: 'absolute', width: '100%', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n              {(isYouTubeURL(imgArray[imgIndex]) ? (\r\n                <VideoPlayer\r\n                  key={uuidv4()}\r\n                  url={imgArray[imgIndex]}\r\n                  height={'calc(100% - 20px)'}\r\n                  width='100%'\r\n                />\r\n              ) : (\r\n                <ImageZoomable\r\n                  alt={`Gallery Item #${imgIndex}`}\r\n                  sx={{ height: galleryHeight(), WebkitTapHighlightColor: 'transparent' }}\r\n                  onContextMenu={(event) => { event.preventDefault() }}\r\n                  title={`Gallery Item #${imgIndex}`}\r\n                  src={imgArray[imgIndex]}\r\n                />\r\n              ))}\r\n            </AnimatedBox>\r\n          ))}\r\n        </Grid>\r\n        {/* > */}\r\n        <Grid item xs={1} sm={1} sx={{ ...gallerySX, ...arrowSx }} zIndex={5}>\r\n          <SideArrow title='Next Image' onClick={cycleRight}>\r\n            <ArrowRightIcon sx={{ scale: '3' }}/>\r\n          </SideArrow>\r\n        </Grid>\r\n      </Grid>\r\n      {/* Display other images on the bottom */}\r\n      <Box\r\n        component={OverlayScrollbarsComponent}\r\n        defer\r\n        options={{ scrollbars: { autoHide: 'never', theme: (lightMode) ? 'os-theme-dark' : 'os-theme-light' }, overflow: { x: 'scroll', y: 'scroll' }}}\r\n        {...preventSwipeHandler}\r\n        sx={{ bgcolor: 'bgColor.darker', pb: 1 }}\r\n      >\r\n        <Box sx={{ display: 'flex' }}>\r\n          {imgArray.map((imgSrc, imgSrcNo) => (\r\n            <Box key={`img-${imgSrcNo}`} sx={{ position: 'relative', flex: 'none' }}>\r\n              {(isYouTubeURL(imgSrc)) && (\r\n                <Box\r\n                  component='img'\r\n                  sx={{\r\n                    position: 'absolute',\r\n                    width: '50%',\r\n                    top: '50%',\r\n                    left: '50%',\r\n                    translate: '-50% -50%',\r\n                    pointerEvents: 'none',\r\n                    transition: 'scale 0.2s ease-in-out',\r\n                    scale: (imgIndex === imgSrcNo) ? '1.0' : '0.9',\r\n                    zIndex: 2\r\n                  }}\r\n                  src='/images/youtube.svg'\r\n                />\r\n              )}\r\n              <Box\r\n                component='img'\r\n                sx={{\r\n                  cursor: 'pointer',\r\n                  height: '100px',\r\n                  transition: 'scale 0.2s ease-in-out, opacity 0.2s ease-in-out',\r\n                  scale: (imgIndex === imgSrcNo) ? '1.0' : '0.9',\r\n                  opacity: (imgIndex === imgSrcNo) ? '1.0' : '0.5',\r\n                  WebkitTapHighlightColor: 'transparent',\r\n                }}\r\n                onClick={() => { switchImg(imgSrcNo) }}\r\n                src={getYouTubeThumbnailImg(imgSrc)}\r\n                alt={(imgSrcNo === 0) ? 'Thumbnail' : `Additional image #${imgSrcNo}`}\r\n              />\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n    </AnimatedBox>\r\n  );\r\n}\r\n\r\ntype SideArrowProps = {\r\n  children?: React.ReactNode,\r\n  onClick: React.MouseEventHandler<HTMLButtonElement>,\r\n  title?: string\r\n}\r\n\r\nconst SideArrow = ({ children, onClick, title }: SideArrowProps) => (\r\n  <Button\r\n    aria-label={title}\r\n    title={title}\r\n    sx={{\r\n      borderWidth: '2px',\r\n      borderStyle: 'solid',\r\n      borderColor: 'contrastColor.main',\r\n      width: '100%',\r\n      height: '100%',\r\n      color: 'contrastColor.main'\r\n    }}\r\n    onClick={onClick}\r\n    disableRipple\r\n  >\r\n    {children}\r\n  </Button>\r\n)\r\n\r\nexport default ImageGallery;\r\n","import React, { Fragment } from 'react';\r\nimport { Box, Link } from '@mui/material';\r\nimport ButtonGoBack from '../../../components/ButtonGoBack';\r\nimport ImageGallery from '../../../components/ImageGallery';\r\nimport BoxInfo from '../../../components/BoxInfo';\r\nimport GradientTitle from '../../../components/GradientTitle';\r\n\r\nconst ProjectMinecraftScreensaver = () => (\r\n  <Fragment>\r\n    <ButtonGoBack destination={'/projects'} />\r\n    <GradientTitle title={'Minecraft Screensaver'} />\r\n    <ImageGallery\r\n      imgArray={[\r\n        'https://youtu.be/dCYTLbNl_to',\r\n        'images/minecraft-recreation/screensaver-1.webp',\r\n        'images/minecraft-recreation/screensaver-2.webp',\r\n        'images/minecraft-recreation/screensaver-3.webp',\r\n        'images/minecraft-recreation/screensaver-4.webp'\r\n      ]}\r\n    />\r\n    <BoxInfo title='Project Description'>\r\n      {'A small interactable screensaver based on the game '} \r\n      <Link href='https://www.minecraft.net/' target='_blank'>{'Minecraft'}</Link>\r\n      {\r\n        `. All textures used in the projects belong to `\r\n      }\r\n      <Box component='span' sx={{ color: 'red.main' }}>{'Mojang Studios'}</Box>\r\n      {'.'}\r\n      <br/>\r\n      <br/>\r\n      {'This project was my first exposure to the '}\r\n      <Box component='span' sx={{ color: 'green.main' }}>{'Open Graphics Library'}</Box>\r\n      {' and '}\r\n      <Box component='span' sx={{ color: 'green.main' }}>{'C++'}</Box>\r\n      {\r\n        `. Working on this project taught me many tricks and skills to animate and draw a seamless looping animation.\r\n        Such skills are included but not limited to: applying trigonometry and bezier curves for animation, manipulating shaders to render what is needed,\r\n        taking advantage of the different texture options provided by `\r\n      }\r\n      <Box component='span' sx={{ color: 'green.main' }}>{'OpenGL'}</Box>\r\n      {' etc.'}\r\n    </BoxInfo>\r\n    <BoxInfo plagiarism/>\r\n    {/*\r\n    <Typography mt={5} mb={4} variant='h3' fontWeight='bold' align='center'>\r\n      {'Download'}\r\n    </Typography>\r\n    <BoxInfo\r\n      footer={\r\n        <ButtonDownload\r\n          title={'Download MinecraftRecreation.exe'}\r\n          downloadLink={'https://drive.google.com/u/0/uc?id=1q4tB-9zCkvce8WCnNo_TBP7hWTyT8aqa&export=download&confirm=t'}\r\n          fileName={'MinecraftRecreation.zip'}\r\n        />\r\n      }\r\n    >\r\n      {`As per `}\r\n      <Box component='span' sx={{ color: 'yellow.main' }}>{'UNSW'}</Box>\r\n      {\r\n        ` Policy, the source code for this project can not be publicly shared.\r\n        However, you may download the production build of the project here. `\r\n      } \r\n      <Box component='span' sx={{ color: 'red.main' }}>{'(.exe file is not certified nor signed)'}</Box>\r\n    </BoxInfo>\r\n    */}\r\n  </Fragment>\r\n)\r\n\r\nexport default ProjectMinecraftScreensaver;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m14 7-5 5 5 5V7z\"\n}), 'ArrowLeft');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m10 17 5-5-5-5v10z\"\n}), 'ArrowRight');\nexports.default = _default;"],"names":["children","title","footer","plagiarism","AnimatedBox","animated","Box","style","useSpring","from","opacity","scale","to","p","my","mx","md","xs","sx","borderRadius","borderWidth","borderStyle","borderColor","bgcolor","pb","fontWeight","fontSize","Fragment","component","color","mt","display","justifyContent","width","height","url","useState","hoverButtonState","setHoverButtonState","showVidState","setShowVidState","src","convertToEmbedYoutubeVid","frameBorder","allow","allowFullScreen","thumbnailImg","getYouTubeThumbnailImg","centerSX","position","top","left","transform","role","alt","onMouseEnter","onMouseLeave","onClick","event","stopPropagation","cursor","WebkitTapHighlightColor","zIndex","transition","filter","SideArrow","Button","disableRipple","imgArray","lightMode","useTheme","palette","mode","largeMq","useMediaQuery","theme","breakpoints","up","mediumMq","imgIndex","setImgIndex","prevImgIndex","setPrevImgIndex","swipeHandler","useSwipeable","delta","onSwipedLeft","cycleImg","onSwipedRight","preventSwipeHandler","onSwiped","animationProps","transitions","useTransition","x","enter","leave","newIndex","switchImg","mod","length","img","galleryHeight","gallerySX","alignItems","arrowSx","flexDirection","overflow","Grid","container","item","sm","ArrowLeft","isYouTubeURL","uuidv4","ImageZoomable","onContextMenu","preventDefault","ArrowRight","OverlayScrollbarsComponent","defer","options","scrollbars","autoHide","y","map","imgSrc","imgSrcNo","flex","translate","pointerEvents","destination","href","target","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}