{"version":3,"file":"static/js/520.13dc96ec.chunk.js","mappings":"oNAIMA,GAAmBC,EAAAA,EAAAA,KAAO,gBAAGC,EAAS,EAATA,UAAcC,GAAK,mBACpD,SAAC,KAAO,kBAAKA,GAAK,IAAEC,OAAK,EAACC,QAAS,CAAEC,OAAQJ,KAAe,GADrCD,EAEtB,kBAAGM,EAAK,EAALA,MAAK,mCACFC,EAAAA,EAAAA,OAAyB,CAC9BC,MAAOF,EAAMG,QAAQC,aAAaC,WACnC,sBACMJ,EAAAA,EAAAA,SAA2B,CAChCK,gBAAiBN,EAAMG,QAAQC,aAAaC,QAC5CH,MAAOF,EAAMG,QAAQC,aAAaG,KAClCC,UAAWR,EAAMS,QAAQ,GACzBC,SAAU,KACX,KAGH,K,sFC8EA,IA7EuB,SAAH,GAQG,IAPrBC,EAAE,EAAFA,GACAC,EAAQ,EAARA,SACAC,EAAI,EAAJA,KACAC,EAAE,EAAFA,GAAG,EAAD,EACFC,QAAAA,OAAO,MAAG,GAAE,EACZC,EAAK,EAALA,MAAM,EAAD,EACLC,aAAAA,OAAY,OAAO,EAEnB,GAAsDC,EAAAA,EAAAA,YAA6B,eAA5EC,EAAmB,KAAEC,EAAsB,KAK5CC,EAAoB,WACxBD,OAAuBE,EACzB,EAEMC,GACJ,SAAC,IAAU,CACTP,MAAOA,EACP,aAAYA,EACZF,GAAIA,EACJH,GAAIA,EACJ,gBAAeQ,EAAsB,qBAAkBG,EACvD,gBAAc,OACd,gBAAeH,EAAsB,YAASG,EAC9CE,QAjBsB,SAACC,GACzBA,EAAMC,kBACNN,EAAuBK,EAAME,cAC/B,EAc+B,SAE1Bd,IAICe,GACJ,SAAC,IAAI,CACHC,mBAAiB,EACjBC,SAAUX,EACVY,KAAMC,QAAQb,GACdc,QAASZ,EACTG,QAAS,WACFP,GACLI,GACF,EACAa,cAAe,CACb,kBAAmBvB,GAErBG,GAAI,CAAEqB,GAAI,CAAEC,OAAQ,EAAGC,YAAa,eAAgBC,aAAc,SAClEC,WAAY,CACVzB,GAAI,CACFwB,aAAc,SAEhB,SAED1B,IAIL,OAAIG,EAAQyB,OAAS,GAEjB,UAAC,EAAAC,SAAQ,YACP,SAAC,IAAgB,CAAC5C,OAAK,EAACmB,MAAOD,EAAS2B,UAAU,MAAK,SACpDnB,IAEFK,MAMH,UAAC,EAAAa,SAAQ,WACNlB,EACAK,IAIT,C,kNCLA,EArFgB,WACd,OAAkCV,EAAAA,EAAAA,WAAS,GAAM,eAA1CyB,EAAS,KAAEC,EAAY,KACxBC,GAAUC,EAAAA,EAAAA,IAAc,SAAC9C,GAAY,OAAKA,EAAM+C,YAAYC,GAAG,KAAK,IACpEC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAmC,MAAtBF,EAASG,SACtBC,GAAMC,EAAAA,EAAAA,QAAoB,MAEhC,GAAsBtC,EAAAA,EAAAA,UAAS,oCAAmC,eAA3DuC,EAAG,KAAEC,EAAM,KAmBlB,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAUC,YAAW,WACzBH,EAAO,kCACT,GAAG,IAEH,OAAO,WAAQI,aAAaF,EAAS,CACvC,GAAG,KAEHD,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACd,GAA0B,MAAtBR,EAASG,UAAoBtB,QAAsB,QAAf,EAACmB,EAASY,aAAK,aAAd,EAAgBC,cAAe,CACtE,IAAMC,EAAUV,EAAIW,QACb,OAAPD,QAAO,IAAPA,GAAAA,EAASE,UAAUC,OAAO,aACd,OAAPH,QAAO,IAAPA,GAAAA,EAASI,YACP,OAAPJ,QAAO,IAAPA,GAAAA,EAASE,UAAUG,IAAI,YACzB,CACF,GAAG,CAACnB,KAGF,UAAC,EAAAV,SAAQ,YACP,SAAC8B,EAAA,EAAG,CACFhB,IAAKA,EACLiB,KAAK,SACLxD,MAAM,YACNrB,UAAU,YACVmB,GAAI,CACF2D,MAAO,OACPC,OAAQ,OACRpC,aAAc,MACdqC,SAAU,SACVC,OAAQ,UACRC,WAAY,yBACZC,MAAO,MACP,UAAW,CACTA,MAAO,QAETC,wBAAyB,eAE3BC,EAAG,EACHC,aAAc,WAAQrC,GAAa,EAAM,EACzCsC,aAAc,WAAQtC,GAAa,EAAO,EAC1CpB,QAAS,WAAY6B,GAAYJ,EAAS,IAAK,CAAEc,MAAO,CAAEC,aAAcb,EAASG,WAAc,EAAE,UAEjG,SAACiB,EAAA,EAAG,CACFzD,GAAI,CACF4D,OAAQ,OACRD,MAAO,OACPU,UAAW1B,EACX2B,SAAU,OACVC,WAAY,aACZ,UAEF,SAACd,EAAA,EAAG,CACF5E,UAAW,sBACXmB,GAAI,CAAE4D,OAAQ,OAAQD,MAAO,eAKnC,SAACa,EAAA,EAAQ,CAACC,YAAY,aAAaC,GAAI7C,IAAcE,EAAQ,UAC3D,UAAC0B,EAAA,EAAG,CAACzD,GAAI,CAAE2E,QAAS,OAAQC,cAAe,SAAUC,GAAI,GAAI,WAC3D,SAACC,EAAA,EAAU,CAACC,WAAW,iBAAiBnF,SAAU,GAAIoF,WAAW,OAAOC,QAAM,WAC3E,mBAEH,UAACH,EAAA,EAAU,CAACC,WAAW,iBAAiBnF,SAAU,GAAIoF,WAAW,OAAOC,QAAM,aAC5E,SAACxB,EAAA,EAAG,CAACyB,UAAU,OAAOrG,UAAU,gBAAgBmB,GAAI,CAAEmF,WAAY,QAAS,SACxE,cAEF,qBAMb,E,oMCiCA,MAlGA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAkBC,EAAAA,EAAAA,KAAe,SAAAtC,GAAK,OAAIA,EAAMuC,UAAU,IAC1DC,GAAcF,EAAAA,EAAAA,KAAe,SAAAtC,GAAK,OAAIA,EAAMyC,MAAM,IAClDC,GAAkBJ,EAAAA,EAAAA,KAAe,SAAAtC,GAAK,OAAIA,EAAM2C,UAAU,IAC1DC,GAAqBN,EAAAA,EAAAA,KAAe,SAAAtC,GAAK,OAAIA,EAAM6C,WAAW,IAC9DC,GAAYC,EAAAA,EAAAA,KAAW3G,QAAQ4G,KAE/BC,EAAoB,CACxB,CACEnG,MAAM,SAACoG,EAAA,EAAa,IACpBC,MAAO,aAET,CACErG,MAAM,SAACsG,EAAA,EAAa,IACpBD,MAAO,QAET,CACErG,MAAM,SAACuG,EAAA,EAAS,IAChBF,MAAO,SAET,CACErG,MAAM,SAACwG,EAAA,EAAe,IACtBH,MAAO,WAET,CACErG,MAAM,SAACyG,EAAA,EAAU,CAACxG,GAAI,CAAEgE,MAAO,SAC/BoC,MAAO,aAET,CACErG,MAAM,SAACyG,EAAA,EAAU,CAACxG,GAAI,CAAEgE,MAAO,UAC/BoC,MAAO,aAET,CACErG,MAAM,SAAC0G,EAAA,EAAU,IACjBL,MAAO,aAET,CACErG,MAAM,SAAC2G,EAAA,EAAU,IACjBN,MAAO,SAILO,EAAiB,CACrB,CACEC,IAAK,aACL7G,KAAMmG,EAAkBZ,GAAiBvF,KACzC8G,KAAK,eAAD,OAAiBX,EAAkBZ,GAAiBc,OACxD1F,QAAS,WAAQ0E,GAAS0B,EAAAA,EAAAA,IAAcxB,EAAkB,GAAI,GAEhE,CACEsB,IAAK,SACL7G,MAAM,SAACgH,EAAA,EAAO,IACdF,KAAK,eAAD,OAAkBpB,EAAe,UAAW,YAChD/E,QAAS,WAAQ0E,GAAS4B,EAAAA,EAAAA,KAAiBvB,GAAc,GAE3D,CACEmB,IAAK,QACL7G,KAAqB,SAAdgG,GAAwB,SAACkB,EAAA,EAAY,KAAK,SAACC,EAAA,EAAa,IAC/DL,KAAK,GAAD,OAAKd,EAAU,GAAGoB,cAAgBpB,EAAUqB,MAAM,GAAGC,cAAa,SACtE3G,QAAS,WAAQ0E,GAASkC,EAAAA,EAAAA,IAA4B,SAAdvB,EAAwB,QAAU,QAAS,GAErF,CACEa,IAAK,OACL7G,KAAO4F,GAAmB,SAAC4B,EAAA,EAAQ,KAAK,SAACC,EAAA,EAAY,IACrDX,KAAK,UAAD,OAAYlB,EAAkB,SAAW,YAC7CjF,QAAS,WAAQ0E,GAASqC,EAAAA,EAAAA,KAAe9B,GAAkB,GAE7D,CACEiB,IAAK,eACL7G,KAAO8F,GAAsB,SAAC6B,EAAA,EAAiB,KAAK,SAACC,EAAA,EAAc,IACnEd,KAAK,YAAD,OAAchB,EAAqB,SAAW,WAClDnF,QAAS,WAAQ0E,GAASwC,EAAAA,EAAAA,KAAgB/B,GAAqB,IAInE,OACE,UAACgC,EAAA,EAAc,CAAC3H,MAAM,WAAWH,MAAM,SAAC+H,EAAA,EAAY,IAAI,WACtD,SAAChD,EAAA,EAAU,CAACiD,MAAM,SAAS7D,EAAG,EAAGlE,GAAI,CAAE2D,MAAO,SAAU,SACrD,sBAEH,kBACCgD,EAAeqB,KAAI,SAACC,GAAa,OAChC,UAACC,EAAA,EAAQ,CAEPxH,QAAS,SAACC,GACRA,EAAMC,kBACNqH,EAAcvH,SAChB,EAAE,WAEF,SAACyH,EAAA,EAAY,UAAEF,EAAclI,QAC7B,SAAC+E,EAAA,EAAU,UAAEmD,EAAcpB,SAPtBoB,EAAcrB,IAQV,MAInB,E,mBChEA,GA3CqBwB,EAAAA,EAAAA,aAA8C,WAAkD3F,GAAS,IAAxD2D,EAAK,EAALA,MAAO1F,EAAO,EAAPA,QAAQ,EAAD,EAAE2H,SAAAA,OAAQ,OAAQ,EAAEC,EAAS,EAATA,UAChGC,EAAwC,WAA5BvC,EAAAA,EAAAA,KAAW3G,QAAQ4G,KACrC,GAA0B7F,EAAAA,EAAAA,WAAS,GAAM,eAAlCoI,EAAK,KAAEC,EAAQ,KAOtB,OACE,SAACC,EAAA,EAAM,CACLjG,IAAKA,EACL6F,UAAWA,EACX5H,QATkB,WACpB+H,GAAS,GACT/H,GACF,EAOIV,GAAI,CACFmF,WAAY,OACZ3D,aAAc,MACdoC,OAAQ,OACRD,MAAO,SACPgF,aAAc,4BACd5E,WAAY,4DACZnE,SAAU,CAAEgJ,GAAI,QAChBC,QAAUR,EAAaE,EAAY,qBAAuB,kBAAqB,GAC/EnJ,MAAQiJ,EAAY,oBAAsB,GAC1C,UAAW,CAETQ,QAAUR,EAAaE,EAAY,qBAAuB,kBAAqB,kBAGnFF,SAAUA,EACVS,eAAa,WAEXN,GACA,SAACO,EAAA,EAAQ,CAACC,UAAW,EAAGC,UAAW,CAAC,GAAI,IAAI,SACzC7C,IAGHA,GAIR,I,wCC4IA,EAnLe,WACb,IAAMT,GAAkBJ,EAAAA,EAAAA,KAAe,SAAAtC,GAAK,OAAIA,EAAM2C,UAAU,IAChE,GAAsCxF,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA3C8I,EAAW,KAAEC,EAAc,KAClC,GAAoC/I,EAAAA,EAAAA,WAAS,GAAK,eAA3CgJ,EAAU,KAAEC,EAAa,KAChC,GAAsCjJ,EAAAA,EAAAA,UAAS,GAAE,eAA1CkJ,EAAW,KAAEC,EAAc,KAC5BC,GAAoB9G,EAAAA,EAAAA,QAA4B,IAEhDxD,GAAQ8G,EAAAA,EAAAA,KACRuC,EAAwC,WAA5BvC,EAAAA,EAAAA,KAAW3G,QAAQ4G,KAC/BlE,GAAUC,EAAAA,EAAAA,GAAc9C,EAAM+C,YAAYC,GAAG,OAG7CuH,GAAiBC,EAAAA,EAAAA,IAAU,CAC/BC,KAAM,CAAEC,GAAI,IACZC,GAAI,CAAED,EAAG,KAELE,GAAiBC,EAAAA,EAAAA,GAASC,EAAAA,GAC1B7H,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEX2H,EAAoBC,EAAAA,GAAAA,MAAmB,GAAGlC,KAAI,SAACmC,GAAgB,OACnEA,EAAiB/C,MAAM,EAAE,IAGrBgD,EAAY,EAChB,SAACC,EAAA,EAAY,KACb,SAACC,EAAA,EAAa,KACd,SAACC,EAAA,EAAe,MAIlB1H,EAAAA,EAAAA,YAAU,WAGR,IAAI2H,GAAW,EACTC,EAAgBP,EAAAA,GAAAA,MAAmB,GAAGlC,KAAI,SAACmC,GAAgB,OAC/DA,EAAiB/C,MAAM,EAAE,IACxBsD,WAAU,SAACC,GACZ,IAAMC,EAAWvI,EAASG,SAASqI,UAAU,GAE7C,OADAL,EAAWG,IAAWC,EACfA,EAASE,WAAWH,EAC7B,IAEMxH,EAAUqG,EAAkBpG,QAAQ2H,KAAKC,IAAIP,EAAe,IAE5DQ,EAAiB,OAAP9H,QAAO,IAAPA,OAAO,EAAPA,EAAS+H,wBACzB/B,EAAe,CACbgC,QAAe,OAAPhI,QAAO,IAAPA,OAAO,EAAPA,EAASiI,WAAY,EAC7BC,KAAa,OAAPlI,QAAO,IAAPA,OAAO,EAAPA,EAASmI,WACf3H,MAAc,OAAPsH,QAAO,IAAPA,OAAO,EAAPA,EAAStH,MAChBC,OAAQ,EACR2H,QAAUd,EAAgB,IAAMD,EAAY,IAAM,KAEtD,GAAG,CAACnI,KAGJQ,EAAAA,EAAAA,YAAU,WAER,IAAI8C,GAA6B,MAAV6F,OAAvB,CAKA,IAAMC,EAAgB,WACN,MAAVD,SAGJnC,EAAcmC,OAAOE,QAAUpC,GAG/BC,EAAeiC,OAAOE,SACxB,EAKA,OAHAF,OAAOG,iBAAiB,SAAUF,GAG3B,WACLD,OAAOI,oBAAoB,SAAUH,EACvC,CAjBA,CAFEpC,GAAc,EAoBlB,GAAG,CAACC,EAAa3D,IAIjB,IAAMkG,GACJ,SAACpI,EAAA,EAAG,CAACqI,GAAG,OAAO9L,GAAI,CAAE2E,QAAS,OAAQoH,eAAgB,SAAUC,WAAY,UAAW,UACrF,SAAC,EAAQ,MAKPC,EAAqBhC,EAAkBjC,KAAI,SAACkE,EAAmBC,GAAa,OAChF,SAAC,EAAY,CAEX1J,IAAK,SAAC2J,GAA2B5C,EAAkBpG,QAAQ+I,GAASC,CAAE,EACtE1L,QAAS,WACPyB,EAAS,IAAD,OAAK+J,GAAa,CAAEjJ,MAAO,CAAEC,aAAcb,EAASG,WAC9D,EACA6F,SAAUhG,EAASG,WAAQ,WAAS0J,GACpC9F,MAAO8F,EACP5D,UAAW8B,EAAU+B,IAAO,kBAPZD,GAQhB,IACDG,SAAQ,SAAClJ,EAA0BgJ,GAAa,OAAiB,IAAVA,EAExD,EACE,SAACG,EAAA,EAAO,CAAC7H,YAAY,WAAW8H,UAAQ,qBAAiBJ,IACzDhJ,GACA,SAACmJ,EAAA,EAAO,CAAC7H,YAAY,WAAW8H,UAAQ,qBAAiBJ,EAAQ,KAGnE,CAAChJ,GAAS,SAACmJ,EAAA,EAAO,CAAC7H,YAAY,WAAW8H,UAAQ,qBAAiBJ,EAAQ,IAC5E,IAED,OACE,SAACrC,EAAc,CACb0C,MAAO/C,EACPzJ,GAAI,CACFR,gBAAkB+I,EAAa,wBAA0B,kBACzDkE,eAAe,gYASf9I,MAAO,QACPI,WAAY,6BACZ2I,UAAU,MAAD,OAAQtD,EAAa,KAAO,SACrCuD,IAAK,EACLtB,KAAM,EACNuB,SAAU,SACV,UAEF,UAACC,EAAA,GAAI,CAACC,WAAS,EAAC9M,GAAI,CAAE+M,GAAI,EAAGC,GAAKjL,EAAW,EAAI,GAAI,WACnD,SAAC8K,EAAA,GAAI,CAACI,MAAI,EAACjN,GAAI,CAAE2E,QAAS,OAAQqH,WAAY,UAAW,UACvD,SAAC,EAAO,OAIRjK,GAAW8J,GACX9J,IAAW,SAACuK,EAAA,EAAO,CAAC7H,YAAY,aAAa8H,UAAQ,EAACvM,GAAI,CAAE2D,MAAO,OAAQkF,QAAS,iBAEtF,UAACgE,EAAA,GAAI,CACHI,MAAI,EACJpN,GAAG,gBACHqN,GAAI,GACJtE,GAAI,EACJuE,GAAI,EACJnN,GAAI,CACF4M,SAAU,WACVjI,QAAS,OACToH,eAAgBhK,EAAU,OAAS,gBACnC+J,GAAI/J,EAAU,EAAI,EAClBqL,UAAW,QACX,WAGF,SAAC3J,EAAA,EAAG,CACF5E,UAAU,yBACVmB,IAAE,QACA4M,SAAU,WACVjI,QAAS,OACT0I,cAAe,OACftJ,WAAY,uBACZuJ,OAAQ,GACLpE,KAGN+C,KAIFlK,GAAW8J,MAIpB,C,sHC5KA,EAdyB,WAAyE,IAAxEzM,EAAK,uDAAG,wBAAyBmO,EAAI,wDAAGC,EAAAA,EAAAA,IAAI,GAAI,IACxE,MAAO,CACL3N,IAAI4N,EAAAA,EAAAA,KACJC,UAAWC,KAAKC,MAChBxO,MAAAA,EACAmO,KAAMA,EACNf,MAAO,CACLG,IAAI,GAAD,QAAMa,EAAAA,EAAAA,IAAI,EAAG,KAAI,KACpBnC,KAAK,GAAD,QAAKmC,EAAAA,EAAAA,IAAI,EAAG,KAAI,KACpBF,OAAQ,GAGd,E,mBCsBA,EAzByB,SAAH,GAAgD,IAA1ClO,EAAK,EAALA,MAAOmO,EAAI,EAAJA,KAAMf,EAAK,EAALA,MACvC,OACE,iBACE3N,UAAU,uBACV2N,OAAK,gBAAII,SAAU,WAAYS,cAAe,QAAWb,GAAK,IAAEE,UAAW,cAAc,UAEzF,gBACEF,MAAO,CAAEqB,UAAW,4BACpBlK,MAAO4J,EACP3J,OAAQ2J,EACRO,QAAQ,YACRC,KAAK,OACLlP,WAAY2O,EAAAA,EAAAA,IAAI,EAAG,GAAM,0BAA4B,8BAA8B,UAEnF,iBACEQ,OAAO,QACPC,YAAY,MACZC,EAAE,6PACFH,KAAM3O,OAKhB,ECvBM+O,EAAgB,CACpB,wBACA,UACA,UACA,UACA,UACA,sBA0DF,EAvDiB,SAAH,GAA0E,IAApErO,EAAQ,EAARA,SAAS,EAAD,EAAEkJ,UAAAA,OAAS,MAAG,EAAC,MAAEC,UAAAA,OAAS,MAAG,CAAC,EAAG,IAAG,EAC9D,GAAgC7I,EAAAA,EAAAA,UAAyB,IAAG,eAArDgO,EAAQ,KAAEC,EAAW,KAwB5B,OAtBAxL,EAAAA,EAAAA,YAAU,WACR,IAAMyL,EAAkBvL,YAAW,WAEjC,IAAMwL,EAAWZ,KAAKC,MAChBY,GAAe,OAAIJ,GAAUK,QAAO,SAACC,GAAQ,OACjDH,EAAWG,EAAShB,WAAa,GAAI,IAIvCW,EAAY,GAAD,eACNG,GAAY,CACfG,EACER,GAAcX,EAAAA,EAAAA,IAAI,EAAGW,EAAczM,OAAS,KAC5C8L,EAAAA,EAAAA,IAAIvE,EAAU,GAAIA,EAAU,OAIlC,IAAGuE,EAAAA,EAAAA,IAAI,EAAGzC,KAAKC,IAAI,IAAOhC,EAAW,MAErC,OAAO,kBAAMhG,aAAasL,EAAiB,CAC7C,KAGE,UAAC7K,EAAA,EAAG,CACFyB,UAAU,OACVlF,GAAI,CACF4M,SAAU,WACVjI,QAAS,gBACT,UAEDyJ,EAASpG,KAAI,SAAC0G,GAAQ,OACrB,SAAC,EAAgB,CAEftP,MAAOsP,EAAStP,MAChBmO,KAAMmB,EAASnB,KACff,MAAOkC,EAASlC,OAAM,mBAHLkC,EAAS7O,IAI1B,KAEJ,SAAC4D,EAAA,EAAG,CACFyB,UAAU,OACVlF,GAAI,CACF4M,SAAU,WACVU,OAAQ,EACRnI,WAAY,QACZ,SAEDrF,MAIT,C","sources":["components/BootstrapTooltip/index.tsx","components/ButtonDropDown/index.tsx","components/LogoBox/index.tsx","components/Navbar/Settings.tsx","components/Navbar/NavbarButton.tsx","components/Navbar/index.tsx","components/Sparklez/generateSparklez.ts","components/Sparklez/SparklezInstance.tsx","components/Sparklez/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: theme.palette.tooltipColor.bgColor,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.tooltipColor.bgColor,\r\n    color: theme.palette.tooltipColor.main,\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: 11,\r\n  },\r\n}));\r\n\r\nexport default BootstrapTooltip;\r\n","import React, { Fragment, useState } from 'react';\r\nimport { IconButton, Menu, SxProps } from '@mui/material';\r\nimport BootstrapTooltip from '../BootstrapTooltip';\r\n\r\ntype ComponentProps = {\r\n  id?: string,\r\n  children?: React.ReactNode,\r\n  icon?: React.ReactNode,\r\n  sx?: SxProps,\r\n  tooltip?: string,\r\n  title?: string,\r\n  closeOnClick?: boolean\r\n}\r\n\r\n/**\r\n * A component for a button that will drop down a menu that is initially hidden.\r\n * The children should be the menu. Give tooltip a valid string to have a tooltip\r\n * wrapped around the button.\r\n */\r\nconst ButtonDropDown = ({\r\n  id,\r\n  children,\r\n  icon,\r\n  sx,\r\n  tooltip = '',\r\n  title,\r\n  closeOnClick = true\r\n}: ComponentProps) => {\r\n  const [dropDownListingMenu, setDropDownListingMenu] = useState<HTMLButtonElement>();\r\n  const dropListingMenuFn = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    event.stopPropagation();\r\n    setDropDownListingMenu(event.currentTarget);\r\n  };\r\n  const hideListingMenuFn = () => {\r\n    setDropDownListingMenu(undefined);\r\n  };\r\n\r\n  const iconButton = (\r\n    <IconButton\r\n      title={title}\r\n      aria-label={title}\r\n      sx={sx}\r\n      id={id}\r\n      aria-controls={dropDownListingMenu ? 'dropdown-menu' : undefined}\r\n      aria-haspopup='true'\r\n      aria-expanded={dropDownListingMenu ? 'true' : undefined}\r\n      onClick={dropListingMenuFn}\r\n    >\r\n      {icon}\r\n    </IconButton>\r\n  )\r\n\r\n  const dropDownMenu = (\r\n    <Menu\r\n      disableScrollLock\r\n      anchorEl={dropDownListingMenu}\r\n      open={Boolean(dropDownListingMenu)}\r\n      onClose={hideListingMenuFn}\r\n      onClick={() => {\r\n        if (!closeOnClick) return;\r\n        hideListingMenuFn();\r\n      }}\r\n      MenuListProps={{\r\n        'aria-labelledby': id,\r\n      }}\r\n      sx={{ ul: { border: 1, borderColor: 'text.primary', borderRadius: '15px' } }}\r\n      PaperProps={{\r\n        sx: {\r\n          borderRadius: '15px'\r\n        }\r\n      }}\r\n    >\r\n      {children}\r\n    </Menu>\r\n  )\r\n\r\n  if (tooltip.length > 0) {\r\n    return (\r\n      <Fragment>\r\n        <BootstrapTooltip arrow title={tooltip} placement='top'>\r\n          {iconButton}\r\n        </BootstrapTooltip>\r\n        {dropDownMenu}\r\n      </Fragment>\r\n    )\r\n  } else {\r\n    // Return components that don't have a tooltip\r\n    return (\r\n      <Fragment>\r\n        {iconButton}\r\n        {dropDownMenu}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ButtonDropDown;\r\n","import React, { useEffect, useState, useRef, Fragment } from 'react';\r\nimport { Box, Collapse, Typography, useMediaQuery, Theme } from '@mui/material'\r\nimport { useLocation, useNavigate } from 'react-router';\r\n\r\nconst LogoBox = () => {\r\n  const [logoHover, setLogoHover] = useState(false);\r\n  const smallMq = useMediaQuery((theme: Theme) => theme.breakpoints.up('sm'));\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const doNavigate = location.pathname !== '/';\r\n  const ref = useRef<HTMLElement>(null);\r\n\r\n  const [src, setSrc] = useState('url(/images/transparent-img.png)');\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setSrc('url(/images/gw-logo-anim-2.gif)');\r\n    }, 10);\r\n\r\n    return () => { clearTimeout(timeout) };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === '/' && Boolean(location.state?.prevLocation)) {\r\n      const element = ref.current;\r\n      element?.classList.remove('logo-anim');\r\n      void element?.offsetWidth;\r\n      element?.classList.add('logo-anim');\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box\r\n        ref={ref}\r\n        role='button'\r\n        title='Home Page'\r\n        className='logo-anim'\r\n        sx={{\r\n          width: '40px',\r\n          height: '40px',\r\n          borderRadius: '4px',\r\n          overflow: 'hidden',\r\n          cursor: 'pointer',\r\n          transition: 'scale 0.3s ease-in-out',\r\n          scale: '1.0',\r\n          '&:hover': {\r\n            scale: '1.05'\r\n          },\r\n          WebkitTapHighlightColor: 'transparent'\r\n        }}\r\n        m={1}\r\n        onMouseEnter={() => { setLogoHover(true) }}\r\n        onMouseLeave={() => { setLogoHover(false) }}\r\n        onClick={() => { if (doNavigate) navigate('/', { state: { prevLocation: location.pathname } }) }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            height: '100%',\r\n            width: '100%',\r\n            maskImage: src,\r\n            maskSize: '100%',\r\n            maskRepeat: 'no-repeat'\r\n          }}\r\n        >\r\n          <Box\r\n            className={'gradient-background'}\r\n            sx={{ height: '100%', width: '100%' }}\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      <Collapse orientation='horizontal' in={logoHover || !smallMq}>\r\n        <Box sx={{ display: 'flex', flexDirection: 'column', mx: 1 }}>\r\n          <Typography fontFamily='my-handwriting' fontSize={16} lineHeight='15px' noWrap>\r\n            {'Gordon Wang\\'s'}\r\n          </Typography>\r\n          <Typography fontFamily='my-handwriting' fontSize={16} lineHeight='15px' noWrap>\r\n            <Box component='span' className='gradient-text' sx={{ fontWeight: 'bold' }}>\r\n              {'Portfolio'}\r\n            </Box>\r\n            {' Website'}\r\n          </Typography>\r\n        </Box>\r\n      </Collapse>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default LogoBox;\r\n","import React from 'react';\r\nimport { ListItemIcon, MenuItem, Typography, useTheme } from '@mui/material';\r\nimport { setBackground, setHideWebsite, setNavbarLock, setThemeMode, setToggleSplash } from '../../redux/actions';\r\nimport ButtonDropDown from '../ButtonDropDown';\r\nimport { useAppDispatch, useAppSelector } from '../../hooks';\r\n\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport AbcIcon from '@mui/icons-material/Abc';\r\nimport WavesIcon from '@mui/icons-material/Waves';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport ModeStandbyIcon from '@mui/icons-material/ModeStandby';\r\nimport MemoryIcon from '@mui/icons-material/Memory';\r\nimport SquareIcon from '@mui/icons-material/Square';\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\r\nimport LandscapeIcon from '@mui/icons-material/Landscape';\r\nimport WaterDropIcon from '@mui/icons-material/WaterDrop';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\n\r\nfunction Settings () {\r\n  const dispatch = useAppDispatch();\r\n  const backgroundIndex = useAppSelector(state => state.background);\r\n  const splashState = useAppSelector(state => state.splash);\r\n  const navbarLockState = useAppSelector(state => state.navbarLock);\r\n  const websiteHiddenState = useAppSelector(state => state.hideWebsite);\r\n  const themeMode = useTheme().palette.mode;\r\n\r\n  const backgroundOptions = [\r\n    {\r\n      icon: <LandscapeIcon />,\r\n      label: 'Mountains'\r\n    },\r\n    {\r\n      icon: <WaterDropIcon />,\r\n      label: 'Rain'\r\n    },\r\n    {\r\n      icon: <WavesIcon />,\r\n      label: 'Waves'\r\n    },\r\n    {\r\n      icon: <ModeStandbyIcon />,\r\n      label: 'Ripples'\r\n    },\r\n    {\r\n      icon: <SquareIcon sx={{ scale: '1.0' }}/>,\r\n      label: 'Blocks LG'\r\n    },\r\n    {\r\n      icon: <SquareIcon sx={{ scale: '0.66' }}/>,\r\n      label: 'Blocks SM'\r\n    },\r\n    {\r\n      icon: <MemoryIcon />,\r\n      label: 'Circuitry'\r\n    },\r\n    {\r\n      icon: <CancelIcon />,\r\n      label: 'None'\r\n    }\r\n  ];\r\n\r\n  const settingOptions = [\r\n    {\r\n      key: 'background',\r\n      icon: backgroundOptions[backgroundIndex].icon,\r\n      text: `Background: ${backgroundOptions[backgroundIndex].label}`,\r\n      onClick: () => { dispatch(setBackground(backgroundIndex + 1)) }\r\n    },\r\n    {\r\n      key: 'splash',\r\n      icon: <AbcIcon />,\r\n      text: `Splash Text ${(splashState) ? 'enabled': 'disabled'}`,\r\n      onClick: () => { dispatch(setToggleSplash(!splashState)) }\r\n    },\r\n    {\r\n      key: 'theme',\r\n      icon: (themeMode === 'dark') ? <DarkModeIcon/> : <LightModeIcon/>,\r\n      text: `${themeMode[0].toUpperCase() + themeMode.slice(1).toLowerCase()} mode`,\r\n      onClick: () => { dispatch(setThemeMode((themeMode === 'dark') ? 'light' : 'dark')) }\r\n    },\r\n    {\r\n      key: 'lock',\r\n      icon: (navbarLockState) ? <LockIcon/> : <LockOpenIcon/>,\r\n      text: `Navbar ${navbarLockState ? 'locked' : 'unlocked'}`,\r\n      onClick: () => { dispatch(setNavbarLock(!navbarLockState)) }\r\n    },\r\n    {\r\n      key: 'hide-website',\r\n      icon: (websiteHiddenState) ? <VisibilityOffIcon/> : <VisibilityIcon/>,\r\n      text: `Elements ${websiteHiddenState ? 'hidden' : 'showing'}`,\r\n      onClick: () => { dispatch(setHideWebsite(!websiteHiddenState)) }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <ButtonDropDown title='Settings' icon={<SettingsIcon />}>\r\n      <Typography align='center' m={1} sx={{ width: '250px' }}>\r\n        {'Website Settings'}\r\n      </Typography>\r\n      <hr />\r\n      {settingOptions.map((settingOption) => (\r\n        <MenuItem\r\n          key={settingOption.key}\r\n          onClick={(event) => {\r\n            event.stopPropagation();\r\n            settingOption.onClick();\r\n          }}\r\n        >\r\n          <ListItemIcon>{settingOption.icon}</ListItemIcon>\r\n          <Typography>{settingOption.text}</Typography>\r\n        </MenuItem>\r\n      ))}\r\n    </ButtonDropDown>\r\n  )\r\n}\r\n\r\nexport default Settings;\r\n","import React, { forwardRef, useState } from 'react';\r\nimport { Button, useTheme } from \"@mui/material\";\r\nimport Sparklez from '../Sparklez';\r\n\r\ntype ComponentProps = {\r\n  label?: string,\r\n  onClick: Function,\r\n  disabled?: boolean,\r\n  startIcon?: React.ReactNode\r\n}\r\n\r\nconst NavbarButton = forwardRef<HTMLButtonElement, ComponentProps>(({ label, onClick, disabled = false, startIcon }, ref) => {\r\n  const lightMode = useTheme().palette.mode === 'light';\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const handleOnClick = () => {\r\n    setHover(false);\r\n    onClick();\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      ref={ref}\r\n      startIcon={startIcon}\r\n      onClick={handleOnClick}\r\n      sx={{\r\n        fontWeight: 'bold',\r\n        borderRadius: '0px',\r\n        height: '100%',\r\n        width: '33.33%',\r\n        borderBottom: '3px solid rgba(0,0,0,0.5)',\r\n        transition: 'background-color 0.2s ease-in-out, color 0.2s ease-in-out',\r\n        fontSize: { sm: '12px' },\r\n        bgcolor: (disabled) ? (lightMode ? 'rgba(90,90,90,0.5)' : 'rgba(0,0,0,0.5)') : '',\r\n        color: (disabled) ? 'rgba(127,127,127)' : '',\r\n        '&:hover': {\r\n          // Remove highlight color\r\n          bgcolor: (disabled) ? (lightMode ? 'rgba(90,90,90,0.5)' : 'rgba(0,0,0,0.5)') : 'rgba(0,0,0,0)',\r\n        }\r\n      }}\r\n      disabled={disabled}\r\n      disableRipple\r\n    >\r\n      {(hover) ? (\r\n        <Sparklez frequency={3} sizeRange={[10, 15]}>\r\n          {label}\r\n        </Sparklez>\r\n      ) : (\r\n        label\r\n      )}\r\n    </Button>\r\n  )\r\n})\r\n\r\nexport default NavbarButton;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { AppBar, Box, Divider, Grid, useMediaQuery, useTheme } from '@mui/material';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport { useLocation, useNavigate } from 'react-router';\r\nimport LogoBox from '../LogoBox';\r\nimport Settings from './Settings'\r\nimport NavbarButton from './NavbarButton'; \r\nimport config from '../../config.json';\r\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\r\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\r\nimport EmojiPeopleIcon from '@mui/icons-material/EmojiPeople';\r\nimport { useAppSelector } from '../../hooks';\r\n\r\nconst Navbar = () => {\r\n  const navbarLockState = useAppSelector(state => state.navbarLock);\r\n  const [selectedDim, setSelectedDim] = useState({});\r\n  const [showNavbar, setShowNavbar] = useState(true);\r\n  const [lastScrollY, setLastScrollY] = useState(0);\r\n  const navOptionRefArray = useRef<HTMLButtonElement[]>([]);\r\n\r\n  const theme = useTheme();\r\n  const lightMode = useTheme().palette.mode === 'light';\r\n  const smallMq = useMediaQuery(theme.breakpoints.up('sm'));\r\n\r\n  // Animation\r\n  const animationProps = useSpring({\r\n    from: { y: -50 },\r\n    to: { y: 0 }\r\n  })\r\n  const AnimatedAppBar = animated(AppBar);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const navigationOptions = config.PAGES.slice(1).map((navigationOption) => (\r\n    navigationOption.slice(1)\r\n  ));\r\n\r\n  const iconArray = [\r\n    <SmartToyIcon />,\r\n    <LightbulbIcon />,\r\n    <EmojiPeopleIcon />\r\n  ]\r\n\r\n  // Moving the selected border around with each click\r\n  useEffect(() => {\r\n    // Find which tab to highlight by getting the correct ref\r\n    // rootPath is here to ensure that the highlight fades if not on one of the root pages\r\n    let rootPath = false;\r\n    const currPathIndex = config.PAGES.slice(1).map((navigationOption) => (\r\n      navigationOption.slice(1)\r\n    )).findIndex((option) => {\r\n      const currPath = location.pathname.substring(1);\r\n      rootPath = option === currPath;\r\n      return currPath.startsWith(option);\r\n    });\r\n\r\n    const element = navOptionRefArray.current[Math.max(currPathIndex, 0)];\r\n\r\n    const divData = element?.getBoundingClientRect();\r\n    setSelectedDim({\r\n      bottom: element?.offsetTop + 3,\r\n      left: element?.offsetLeft,\r\n      width: divData?.width,\r\n      height: 0,\r\n      opacity: (currPathIndex < 0 || !rootPath) ? '0' : '1'\r\n    });\r\n  }, [location]);\r\n\r\n  // Manages hiding the navbar when scrolling\r\n  useEffect(() => {  \r\n    // Don't hide toolbar if not on mobile\r\n    if (navbarLockState || window == null) {\r\n      setShowNavbar(true);\r\n      return;\r\n    };\r\n  \r\n    const hideOrShowNav = () => {\r\n      if (window == null) return;\r\n\r\n      // Show navbar if the scroll has gone up\r\n      setShowNavbar(window.scrollY < lastScrollY); \r\n\r\n      // take note of where the previous scroll was\r\n      setLastScrollY(window.scrollY); \r\n    };\r\n\r\n    window.addEventListener('scroll', hideOrShowNav);\r\n\r\n    // Clean up the event listener\r\n    return () => {\r\n      window.removeEventListener('scroll', hideOrShowNav);\r\n    };\r\n  }, [lastScrollY, navbarLockState]);\r\n\r\n\r\n  // Contains the settings button\r\n  const settingsComponent = (\r\n    <Box ml='auto' sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n      <Settings />\r\n    </Box>\r\n  )\r\n\r\n  // Adds a divider at the start and between each navigation option\r\n  const navigationElements = navigationOptions.map((navOption: string, index: number) => (\r\n    <NavbarButton\r\n      key={`nav-btn-${navOption}`}\r\n      ref={(e: HTMLButtonElement) => { navOptionRefArray.current[index] = e }}\r\n      onClick={() => {\r\n        navigate(`/${navOption}`, { state: { prevLocation: location.pathname } })\r\n      }}\r\n      disabled={location.pathname === `/${navOption}`}\r\n      label={navOption}\r\n      startIcon={iconArray[index]}\r\n    />\r\n  )).flatMap((element: React.ReactNode, index: number) => ((index === 0) ? (\r\n    // Insert the dividers\r\n    [\r\n      <Divider orientation='vertical' flexItem key={`divider-${index}`} />,\r\n      element,\r\n      <Divider orientation='vertical' flexItem key={`divider-${index + 1}`} />\r\n    ]\r\n  ) : (\r\n    [element, <Divider orientation='vertical' flexItem key={`divider-${index + 1}`} />]\r\n  )));\r\n\r\n  return (\r\n    <AnimatedAppBar\r\n      style={animationProps}\r\n      sx={{\r\n        backgroundColor: (lightMode) ? 'rgba(255,255,255,0.7)' : 'rgba(0,0,0,0.7)',\r\n        backdropFilter: `blur(1px)\r\n          url('data:image/svg+xml,\\\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\">\\\r\n            <filter id=\"turbulence\" x=\"0\" y=\"0\">\\\r\n              <feTurbulence numOctaves=\"3\" seed=\"2\" baseFrequency=\"0.02 0.05\"></feTurbulence>\\\r\n              <feDisplacementMap scale=\"12\" in=\"SourceGraphic\"></feDisplacementMap>\\\r\n            </filter>\\\r\n          </svg>#turbulence')\r\n        `,\r\n        width: '100vw',\r\n        transition: 'translate 0.4s ease-in-out',\r\n        translate: `0% ${showNavbar ? '0%' : '-150%'}`,\r\n        top: 0,\r\n        left: 0,\r\n        position: 'fixed'\r\n      }}\r\n    >\r\n      <Grid container sx={{ pb: 0, px: (smallMq) ? 5 : 1 }}>\r\n        <Grid item sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <LogoBox />\r\n        </Grid>\r\n\r\n        {/* Display settings button here if the screen becomes tiny */}\r\n        {!smallMq && settingsComponent}\r\n        {!smallMq && <Divider orientation=\"horizontal\" flexItem sx={{ width: '100%', bgcolor: 'whitesmoke' }}/>}\r\n  \r\n        <Grid\r\n          item\r\n          id='nav-btn-group'\r\n          xs={12}\r\n          sm={7}\r\n          md={5}\r\n          sx={{\r\n            position: 'relative',\r\n            display: 'flex',\r\n            justifyContent: smallMq ? 'left' : 'space-between',\r\n            ml: smallMq ? 2 : 0,\r\n            minHeight: '50px'\r\n          }}\r\n        >\r\n          {/* Border around selector */}\r\n          <Box\r\n            className='border-gradient marker'\r\n            sx={{\r\n              position: 'absolute',\r\n              display: 'flex',\r\n              pointerEvents: 'none',\r\n              transition: 'all 0.5s ease-in-out',\r\n              zIndex: 2,\r\n              ...selectedDim\r\n            }}\r\n          />\r\n          {navigationElements}\r\n        </Grid>\r\n\r\n        {/* Display settings button here if the screen becomes large enough */}\r\n        {smallMq && settingsComponent}\r\n      </Grid>\r\n    </AnimatedAppBar>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","import { rng } from '../../helpers';\r\nimport { v4 } from 'uuid';\r\nimport { SparklezType } from '../../types';\r\n\r\nconst generateSparklez = (color = 'hsl(50deg, 100%, 50%)', size = rng(25, 75) ): SparklezType => {\r\n  return {\r\n    id: v4(),\r\n    timestamp: Date.now(),\r\n    color,\r\n    size: size,\r\n    style: {\r\n      top:  `${rng(0, 100)}%`,\r\n      left: `${rng(0, 100)}%`,\r\n      zIndex: 2,\r\n    }\r\n  }\r\n}\r\n\r\nexport default generateSparklez\r\n","import React from 'react';\r\nimport { rng } from '../../helpers';\r\n\r\ntype ComponentProps = {\r\n  color: string,\r\n  size: number,\r\n  style: {\r\n    top: string,\r\n    left: string,\r\n    zIndex: 2\r\n  }\r\n}\r\n\r\nconst SparklezInstance = ({ color, size, style }: ComponentProps) => {\r\n  return (\r\n    <span\r\n      className='sparklez-grow-shrink'\r\n      style={{ position: 'absolute', pointerEvents: 'none', ...style, translate: '-50% -50%' }}\r\n    >\r\n      <svg\r\n        style={{ transform: 'translate(-50000000%, 0)' }}\r\n        width={size}\r\n        height={size}\r\n        viewBox='0 0 16 16'\r\n        fill='none'\r\n        className={(rng(0, 1)) ? 'sparklez-spin-clockwise' : 'sparklez-spin-anticlockwise'}\r\n      >\r\n        <path\r\n          stroke='white'\r\n          strokeWidth='1px'\r\n          d='M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z'\r\n          fill={color}\r\n        />\r\n      </svg>\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default SparklezInstance;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Box } from '@mui/material';\r\nimport generateSparklez from './generateSparklez';\r\nimport SparklezInstance from './SparklezInstance';\r\nimport { rng } from '../../helpers';\r\nimport { SparklezType } from '../../types';\r\n\r\ntype ComponentProps = {\r\n  children: React.ReactNode,\r\n  frequency?: number,\r\n  sizeRange?: [number, number]\r\n}\r\n\r\nconst sparkleColors = [\r\n  'hsl(50deg, 100%, 50%)',\r\n  '#EE7752',\r\n  '#E73C7E',\r\n  '#23A6D5',\r\n  '#23D5AB',\r\n  'rgb(150, 246, 246)'\r\n]\r\n\r\nconst Sparklez = ({ children, frequency = 1, sizeRange = [5, 15] }: ComponentProps) => {\r\n  const [sparklez, setSparklez] = useState<SparklezType[]>([]);\r\n\r\n  useEffect(() => {\r\n    const addSpaklezTimer = setTimeout(() => {\r\n      // Delete old sparklez\r\n      const currTime = Date.now();\r\n      const copySparklez = [...sparklez].filter((instance) => (\r\n        currTime - instance.timestamp <= 1000\r\n      ));\r\n\r\n      // Generate new sparklez\r\n      setSparklez([\r\n        ...copySparklez,\r\n        generateSparklez(\r\n          sparkleColors[rng(0, sparkleColors.length - 1)],\r\n          rng(sizeRange[0], sizeRange[1])\r\n        )\r\n      ]);\r\n\r\n    }, rng(5, Math.max(2000 / frequency, 10)));\r\n  \r\n    return () => clearTimeout(addSpaklezTimer);\r\n  });\r\n\r\n  return (\r\n    <Box\r\n      component='span'\r\n      sx={{\r\n        position: 'relative',\r\n        display: 'inline-block'\r\n      }}\r\n    >\r\n      {sparklez.map((instance) => (\r\n        <SparklezInstance\r\n          key={`sparklez-${instance.id}`}\r\n          color={instance.color}\r\n          size={instance.size}\r\n          style={instance.style}\r\n        />\r\n      ))}\r\n      <Box\r\n        component='span'\r\n        sx={{\r\n          position: 'relative',\r\n          zIndex: 1,\r\n          fontWeight: 'bold'\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Sparklez;\r\n"],"names":["BootstrapTooltip","styled","className","props","arrow","classes","popper","theme","tooltipClasses","color","palette","tooltipColor","bgColor","backgroundColor","main","boxShadow","shadows","fontSize","id","children","icon","sx","tooltip","title","closeOnClick","useState","dropDownListingMenu","setDropDownListingMenu","hideListingMenuFn","undefined","iconButton","onClick","event","stopPropagation","currentTarget","dropDownMenu","disableScrollLock","anchorEl","open","Boolean","onClose","MenuListProps","ul","border","borderColor","borderRadius","PaperProps","length","Fragment","placement","logoHover","setLogoHover","smallMq","useMediaQuery","breakpoints","up","navigate","useNavigate","location","useLocation","doNavigate","pathname","ref","useRef","src","setSrc","useEffect","timeout","setTimeout","clearTimeout","state","prevLocation","element","current","classList","remove","offsetWidth","add","Box","role","width","height","overflow","cursor","transition","scale","WebkitTapHighlightColor","m","onMouseEnter","onMouseLeave","maskImage","maskSize","maskRepeat","Collapse","orientation","in","display","flexDirection","mx","Typography","fontFamily","lineHeight","noWrap","component","fontWeight","dispatch","useAppDispatch","backgroundIndex","useAppSelector","background","splashState","splash","navbarLockState","navbarLock","websiteHiddenState","hideWebsite","themeMode","useTheme","mode","backgroundOptions","Landscape","label","WaterDrop","Waves","ModeStandby","Square","Memory","Cancel","settingOptions","key","text","setBackground","Abc","setToggleSplash","DarkMode","LightMode","toUpperCase","slice","toLowerCase","setThemeMode","Lock","LockOpen","setNavbarLock","VisibilityOff","Visibility","setHideWebsite","ButtonDropDown","Settings","align","map","settingOption","MenuItem","ListItemIcon","forwardRef","disabled","startIcon","lightMode","hover","setHover","Button","borderBottom","sm","bgcolor","disableRipple","Sparklez","frequency","sizeRange","selectedDim","setSelectedDim","showNavbar","setShowNavbar","lastScrollY","setLastScrollY","navOptionRefArray","animationProps","useSpring","from","y","to","AnimatedAppBar","animated","AppBar","navigationOptions","config","navigationOption","iconArray","SmartToy","Lightbulb","EmojiPeople","rootPath","currPathIndex","findIndex","option","currPath","substring","startsWith","Math","max","divData","getBoundingClientRect","bottom","offsetTop","left","offsetLeft","opacity","window","hideOrShowNav","scrollY","addEventListener","removeEventListener","settingsComponent","ml","justifyContent","alignItems","navigationElements","navOption","index","e","flatMap","Divider","flexItem","style","backdropFilter","translate","top","position","Grid","container","pb","px","item","xs","md","minHeight","pointerEvents","zIndex","size","rng","v4","timestamp","Date","now","transform","viewBox","fill","stroke","strokeWidth","d","sparkleColors","sparklez","setSparklez","addSpaklezTimer","currTime","copySparklez","filter","instance","generateSparklez"],"sourceRoot":""}